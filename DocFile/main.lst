


ARM Macro Assembler    Page 1 


    1 00000000         ; Counts the number of vowels in a String and makes them
                        uppercase.
    2 00000000         ;
    3 00000000         ; ---------------------------REGISTER SET-UP------------
                       ----------------------
    4 00000000         ; r0 := Working Byte
    5 00000000         ; r1 := Working pointer
    6 00000000         ; r2 := Working count of vowels
    7 00000000         ; r3 := Working offset from String pointer
    8 00000000         ; r4 := 
    9 00000000         ; r5 :=
   10 00000000         ; r6 := String Pointer
   11 00000000         
   12 00000000         
   13 00000000                 THUMB
   14 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
4
   15 00000000                 EXPORT           Start
   16 00000000         Start
   17 00000000 DE00            ADR              r1, testStr
   18 00000002         base
   19 00000002 F811 0B01       LDRB             r0, [r1], #1 ; load byte & incr
                                                            ement address point
                                                            er
   20 00000006 2800            CMP              r0, #0
   21 00000008 BF18 F000 
              F803             BLNE             vcheck      ; Else branch to vo
                                                            wel check
   22 0000000E         stop
   23 0000000E 491B            LDR              r1, =prevCount
   24 00000010 600A            STR              r2, [r1]
   25 00000012 E7FE            B                .
   26 00000014         
   27 00000014         ;----------------------------VOWEL CHECK----------------
                       ----------------------
   28 00000014         ; Examines a char to see if it's a vowel. If the test pa
                       sses, it changes the 
   29 00000014         ; case of the char to upper in the *original* string and
                        increases the value
   30 00000014         ; count by one.
   31 00000014         vcheck
   32 00000014 F010 0F41       TST              r0, #'A'
   33 00000018 BF1F F010 
              0F45             TSTNE            r0, #'E'
   34 0000001E F010 0F49       TSTNE            r0, #'I'
   35 00000022 F010 0F4F       TSTNE            r0, #'O'
   36 00000026 F010 0F55       TSTNE            r0, #'U'
   37 0000002A D010            BEQ              increment
   38 0000002C BF1F F010 
              0F61             TSTNE            r0, #'a'    ; Test for vowels
   39 00000032 F010 0F65       TSTNE            r0, #'e'
   40 00000036 F010 0F69       TSTNE            r0, #'i'
   41 0000003A F010 0F6F       TSTNE            r0, #'o'
   42 0000003E BF18 F010 
              0F75             TSTNE            r0, #'u'
   43 00000044 D1DD            BNE              base
   44 00000046         
   45 00000046         toUpper
   46 00000046 BF08 3820       SUBEQ            r0, r0, #32 ; Convert to Upperc



ARM Macro Assembler    Page 2 


                                                            ase
   47 0000004A F841 0C01       STR              r0, [r1, #-1] ; Store into memo
                                                            ry, increase pointe
                                                            r register
   48 0000004E         
   49 0000004E         increment
   50 0000004E F102 0201       ADD              r2, r2, #1  ; Increase the vowe
                                                            l count
   51 00000052 E7D6            B                base        ; Branch back to lo
                                                            op start
   52 00000054         
   53 00000054         
   54 00000054         ; ---------Range Check----------
   55 00000054         ; Sets r3 to #1 if within a set range. Equivilant to::
   56 00000054         ;
   57 00000054         ; if (low <= x < up) SF = 1
   58 00000054         ; else SF = 0
   59 00000054         
   60 00000054         ;
   61 00000054         ; RESETS THE VALUE OF THE STATUS FLAGS
   62 00000054         ; -------------------------------
   63 00000054 42A0    rcheck  CMP              r0, r4      ; See if greater th
                                                            an lower bound
   64 00000056 BFA8 4285       CMPGE            r5, r0      ; If greater than (
                                                            or equal to) the lo
                                                            wer bound, 
   65 0000005A         ;   Test if less than upper bound
   66 0000005A BFC4 2300       MOVGT            r3, #0      ; If both checks pa
                                                            ssed, prep reset of
                                                             Z status flag
   67 0000005E 2B00            CMPGT            r3, #0      ; Set Z status flag
                                                             if tests passed
   68 00000060 4770            BX               lr          ; Branch back to l
   69 00000062         
   70 00000062 74 68 69 
              73 69 73 
              61 73 74 
              72 69 6E 
              67 77 69 
              74 68 76 
              6F 77 65 
              6C 73 00 testStr DCB              "thisisastringwithvowels", 0
   71 0000007A 00      prevCount
                               DCB              0
   72 0000007B         
   73 0000007B 00              ALIGN
   74 0000007C                 END
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\simpleproject_build\main.d -o.\simpleproject_build\main.o -I.
\RTE\_SimpleProject -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -I
C:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 --predefine="__E
VAL SETA 1" --predefine="__UVISION_VERSION SETA 526" --predefine="_RTE_ SETA 1"
 --predefine="TM4C123GH6PM SETA 1" --list=.\main.lst main.s
